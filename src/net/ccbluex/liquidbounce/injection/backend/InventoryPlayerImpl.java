/*    */ package net.ccbluex.liquidbounce.injection.backend;
/*    */ 
/*    */ 
/*    */ @Metadata(mv = {1, 1, 16}, bv = {1, 0, 3}, k = 1, d1 = {"\0004\n\002\030\002\n\002\030\002\n\000\n\002\030\002\n\002\b\002\n\002\030\002\n\002\030\002\n\002\b\003\n\002\020\b\n\002\b\016\n\002\020\013\n\000\n\002\020\000\n\002\b\003\030\0002\0020\001B\r\022\006\020\002\032\0020\003¢\006\002\020\004J\022\020\027\032\004\030\0010\0072\006\020\030\032\0020\013H\026J\023\020\031\032\0020\0322\b\020\033\032\004\030\0010\034H\002J\n\020\035\032\004\030\0010\007H\026J\022\020\036\032\004\030\0010\0072\006\020\030\032\0020\013H\026R\034\020\005\032\n\022\006\022\004\030\0010\0070\0068VX\004¢\006\006\032\004\b\b\020\tR$\020\f\032\0020\0132\006\020\n\032\0020\0138V@VX\016¢\006\f\032\004\b\r\020\016\"\004\b\017\020\020R\034\020\021\032\n\022\006\022\004\030\0010\0070\0068VX\004¢\006\006\032\004\b\022\020\tR\034\020\023\032\n\022\006\022\004\030\0010\0070\0068VX\004¢\006\006\032\004\b\024\020\tR\021\020\002\032\0020\003¢\006\b\n\000\032\004\b\025\020\026¨\006\037"}, d2 = {"Lnet/ccbluex/liquidbounce/injection/backend/InventoryPlayerImpl;", "Lnet/ccbluex/liquidbounce/api/minecraft/entity/player/IInventoryPlayer;", "wrapped", "Lnet/minecraft/entity/player/InventoryPlayer;", "(Lnet/minecraft/entity/player/InventoryPlayer;)V", "armorInventory", "Lnet/ccbluex/liquidbounce/api/util/IWrappedArray;", "Lnet/ccbluex/liquidbounce/api/minecraft/item/IItemStack;", "getArmorInventory", "()Lnet/ccbluex/liquidbounce/api/util/IWrappedArray;", "value", "", "currentItem", "getCurrentItem", "()I", "setCurrentItem", "(I)V", "mainInventory", "getMainInventory", "offHandInventory", "getOffHandInventory", "getWrapped", "()Lnet/minecraft/entity/player/InventoryPlayer;", "armorItemInSlot", "slot", "equals", "", "other", "", "getCurrentItemInHand", "getStackInSlot", "XSJClient"})
/*    */ public final class InventoryPlayerImpl implements IInventoryPlayer {
/*    */   @NotNull
/*    */   private final InventoryPlayer wrapped;
/*    */   
/*    */   @NotNull
/* 10 */   public final InventoryPlayer getWrapped() { return this.wrapped; } public InventoryPlayerImpl(@NotNull InventoryPlayer wrapped) { this.wrapped = wrapped; } @Metadata(mv = {1, 1, 16}, bv = {1, 0, 3}, k = 3, d1 = {"\000\016\n\000\n\002\030\002\n\000\n\002\030\002\n\000\020\000\032\004\030\0010\0012\b\020\002\032\004\030\0010\003H\n¢\006\002\b\004"}, d2 = {"<anonymous>", "Lnet/minecraft/item/ItemStack;", "it", "Lnet/ccbluex/liquidbounce/api/minecraft/item/IItemStack;", "invoke"})
/*    */   static final class InventoryPlayerImpl$mainInventory$1 extends Lambda implements Function1<IItemStack, ItemStack> { public static final InventoryPlayerImpl$mainInventory$1 INSTANCE = new InventoryPlayerImpl$mainInventory$1(); @Nullable
/* 12 */     public final ItemStack invoke(@Nullable IItemStack it) { IItemStack $this$unwrap$iv = it; int $i$f$unwrap = 0;
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */       
/* 36 */       if ($this$unwrap$iv == null) throw new TypeCastException("null cannot be cast to non-null type net.ccbluex.liquidbounce.injection.backend.ItemStackImpl");  return (it != null) ? ((ItemStackImpl)$this$unwrap$iv).getWrapped() : null; } InventoryPlayerImpl$mainInventory$1() { super(1); } } @Metadata(mv = {1, 1, 16}, bv = {1, 0, 3}, k = 3, d1 = {"\000\020\n\000\n\002\030\002\n\000\n\002\030\002\n\002\b\002\020\000\032\004\030\0010\0012\016\020\002\032\n \004*\004\030\0010\0030\003H\n¢\006\002\b\005"}, d2 = {"<anonymous>", "Lnet/ccbluex/liquidbounce/api/minecraft/item/IItemStack;", "it", "Lnet/minecraft/item/ItemStack;", "kotlin.jvm.PlatformType", "invoke"}) static final class InventoryPlayerImpl$mainInventory$2 extends Lambda implements Function1<ItemStack, IItemStack> { public static final InventoryPlayerImpl$mainInventory$2 INSTANCE = new InventoryPlayerImpl$mainInventory$2(); @Nullable public final IItemStack invoke(ItemStack it) { ItemStack $this$wrap$iv = it; int $i$f$wrap = 0; return (it != null) ? new ItemStackImpl($this$wrap$iv) : null; } InventoryPlayerImpl$mainInventory$2() { super(1); } } @Metadata(mv = {1, 1, 16}, bv = {1, 0, 3}, k = 3, d1 = {"\000\016\n\000\n\002\030\002\n\000\n\002\030\002\n\000\020\000\032\004\030\0010\0012\b\020\002\032\004\030\0010\003H\n¢\006\002\b\004"}, d2 = {"<anonymous>", "Lnet/minecraft/item/ItemStack;", "it", "Lnet/ccbluex/liquidbounce/api/minecraft/item/IItemStack;", "invoke"}) static final class InventoryPlayerImpl$armorInventory$1 extends Lambda implements Function1<IItemStack, ItemStack> { public static final InventoryPlayerImpl$armorInventory$1 INSTANCE = new InventoryPlayerImpl$armorInventory$1(); @Nullable public final ItemStack invoke(@Nullable IItemStack it) { IItemStack $this$unwrap$iv = it; int $i$f$unwrap = 0; if ($this$unwrap$iv == null) throw new TypeCastException("null cannot be cast to non-null type net.ccbluex.liquidbounce.injection.backend.ItemStackImpl");  return (it != null) ? ((ItemStackImpl)$this$unwrap$iv).getWrapped() : null; } InventoryPlayerImpl$armorInventory$1() { super(1); } } @Metadata(mv = {1, 1, 16}, bv = {1, 0, 3}, k = 3, d1 = {"\000\020\n\000\n\002\030\002\n\000\n\002\030\002\n\002\b\002\020\000\032\004\030\0010\0012\016\020\002\032\n \004*\004\030\0010\0030\003H\n¢\006\002\b\005"}, d2 = {"<anonymous>", "Lnet/ccbluex/liquidbounce/api/minecraft/item/IItemStack;", "it", "Lnet/minecraft/item/ItemStack;", "kotlin.jvm.PlatformType", "invoke"}) static final class InventoryPlayerImpl$armorInventory$2 extends Lambda implements Function1<ItemStack, IItemStack> { public static final InventoryPlayerImpl$armorInventory$2 INSTANCE = new InventoryPlayerImpl$armorInventory$2(); @Nullable public final IItemStack invoke(ItemStack it) { ItemStack $this$wrap$iv = it; int $i$f$wrap = 0; return (it != null) ? new ItemStackImpl($this$wrap$iv) : null; } InventoryPlayerImpl$armorInventory$2() { super(1); } } @Metadata(mv = {1, 1, 16}, bv = {1, 0, 3}, k = 3, d1 = {"\000\016\n\000\n\002\030\002\n\000\n\002\030\002\n\000\020\000\032\004\030\0010\0012\b\020\002\032\004\030\0010\003H\n¢\006\002\b\004"}, d2 = {"<anonymous>", "Lnet/minecraft/item/ItemStack;", "it", "Lnet/ccbluex/liquidbounce/api/minecraft/item/IItemStack;", "invoke"}) static final class InventoryPlayerImpl$offHandInventory$1 extends Lambda implements Function1<IItemStack, ItemStack> { public static final InventoryPlayerImpl$offHandInventory$1 INSTANCE = new InventoryPlayerImpl$offHandInventory$1(); @Nullable public final ItemStack invoke(@Nullable IItemStack it) { IItemStack $this$unwrap$iv = it; int $i$f$unwrap = 0; if ($this$unwrap$iv == null) throw new TypeCastException("null cannot be cast to non-null type net.ccbluex.liquidbounce.injection.backend.ItemStackImpl");  return (it != null) ? ((ItemStackImpl)$this$unwrap$iv).getWrapped() : null; } InventoryPlayerImpl$offHandInventory$1() { super(1); } } @Metadata(mv = {1, 1, 16}, bv = {1, 0, 3}, k = 3, d1 = {"\000\020\n\000\n\002\030\002\n\000\n\002\030\002\n\002\b\002\020\000\032\004\030\0010\0012\016\020\002\032\n \004*\004\030\0010\0030\003H\n¢\006\002\b\005"}, d2 = {"<anonymous>", "Lnet/ccbluex/liquidbounce/api/minecraft/item/IItemStack;", "it", "Lnet/minecraft/item/ItemStack;", "kotlin.jvm.PlatformType", "invoke"}) static final class InventoryPlayerImpl$offHandInventory$2 extends Lambda implements Function1<ItemStack, IItemStack> { public static final InventoryPlayerImpl$offHandInventory$2 INSTANCE = new InventoryPlayerImpl$offHandInventory$2(); @Nullable public final IItemStack invoke(ItemStack it) { ItemStack $this$wrap$iv = it; int $i$f$wrap = 0; return (it != null) ? new ItemStackImpl($this$wrap$iv) : null; } InventoryPlayerImpl$offHandInventory$2() { super(1); } } @NotNull public IWrappedArray<IItemStack> getMainInventory() { Intrinsics.checkExpressionValueIsNotNull(this.wrapped.field_70462_a, "wrapped.mainInventory"); return (IWrappedArray<IItemStack>)new WrappedListArrayAdapter((List)this.wrapped.field_70462_a, InventoryPlayerImpl$mainInventory$1.INSTANCE, InventoryPlayerImpl$mainInventory$2.INSTANCE); } @NotNull public IWrappedArray<IItemStack> getArmorInventory() { Intrinsics.checkExpressionValueIsNotNull(this.wrapped.field_70460_b, "wrapped.armorInventory"); return (IWrappedArray<IItemStack>)new WrappedListArrayAdapter((List)this.wrapped.field_70460_b, InventoryPlayerImpl$armorInventory$1.INSTANCE, InventoryPlayerImpl$armorInventory$2.INSTANCE); } @Nullable public IItemStack getStackInSlot(int slot) { ItemStack $this$wrap$iv = this.wrapped.func_70301_a(slot); int $i$f$wrap = 0; this.wrapped.func_70301_a(slot); return (this.wrapped.func_70301_a(slot) != null) ? new ItemStackImpl($this$wrap$iv) : null; }
/* 37 */   @NotNull public IWrappedArray<IItemStack> getOffHandInventory() { Intrinsics.checkExpressionValueIsNotNull(this.wrapped.field_184439_c, "wrapped.offHandInventory"); return (IWrappedArray<IItemStack>)new WrappedListArrayAdapter((List)this.wrapped.field_184439_c, InventoryPlayerImpl$offHandInventory$1.INSTANCE, InventoryPlayerImpl$offHandInventory$2.INSTANCE); } public int getCurrentItem() { return this.wrapped.field_70461_c; } public void setCurrentItem(int value) { this.wrapped.field_70461_c = value; } @Nullable public IItemStack armorItemInSlot(int slot) { ItemStack $this$wrap$iv = this.wrapped.func_70440_f(3 - slot); int $i$f$wrap = 0; this.wrapped.func_70440_f(3 - slot); return (this.wrapped.func_70440_f(3 - slot) != null) ? new ItemStackImpl($this$wrap$iv) : null; } @Nullable public IItemStack getCurrentItemInHand() { ItemStack $this$wrap$iv = this.wrapped.func_70448_g(); int $i$f$wrap = 0; this.wrapped.func_70448_g();
/* 38 */     return (this.wrapped.func_70448_g() != null) ? new ItemStackImpl($this$wrap$iv) : null; }
/*    */ 
/*    */   
/*    */   public boolean equals(@Nullable Object other) {
/*    */     return (other instanceof InventoryPlayerImpl && Intrinsics.areEqual(((InventoryPlayerImpl)other).wrapped, this.wrapped));
/*    */   }
/*    */ }


/* Location:              C:\Users\Administrator\Desktop\XSJ Client v2.3 New Year's Special Edition.jar!\net\ccbluex\liquidbounce\injection\backend\InventoryPlayerImpl.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */